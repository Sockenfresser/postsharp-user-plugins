#summary Using PostSharp with Gibraltar for painless logging and log analysis.

== Introduction ==

GSharp is a set of aspects that integrate with Gibraltar, a simple, yet powerful application logging, monitoring and profiling tool.

*[http://bit.ly/gharp Check out this short video tour of using PostSharp and Gibraltar together]*

<wiki:video url="http://www.youtube.com/watch?v=UEEO9x1XczU"/>

With these aspects you can add powerful logging to your applications without the effort, complexity or clutter of writing procedural logging code.  Plus, Gibraltar makes it incredibly easy to manage and analyze your logs.

<table>
<tr><td>*Attribute*</td><td>*Description*</td></tr>
<tr><td>`[GTrace]`</td><td>logs entry and exit from tagged methods including appropriate message indentation.</td></tr>
<tr><td>`[GTraceField]`</td><td>logs every change in value of a tagged field.</td></tr>
<tr><td>`[GException]`</td><td>logs exceptions at the point they are raised. This is a handy safe guard to ensure that both handled and unhandled exceptions are logged by Gibraltar.</td></tr>
<tr><td>`[GTimer]`</td><td>lets you graph method execution time in Gibraltar providing invaluable information to identify bottlenecks and optimize performance.</td></tr>
</table>

==Requirements==
Basically, you need [http://www.gibraltarsoftware.com/Register_Now.aspx Gibraltar], [http://www.postsharp.org/download PostSharp] and GSharp on a computer running .NET Framework 2.0 or newer.

== Installing GSharp ==

  * Download Log4PostSharp [http://postsharp-user-plugins.googlecode.com/svn/trunk/Log4PostSharp/ source code] using an SVN client.
  * Build the solution using Visual Studio or MSBuild.


== Remarks ===

Use `Multicast` feature of the PostSharp to apply the attribute to all methods in order to log messages with `Debug` level. Besides of this you may additionally decorate chosen methods with `Info` level to log more important messages.

_For questions, please [http://www.gibraltarsoftware.com/About/Contact.aspx contact us!]. We're here to help!_